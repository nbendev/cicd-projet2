name: CI/CD workflow !
on: push
jobs:


    tests-frontend:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend
        steps:
            - name: checkout
              uses: actions/checkout@v5

            - name: setup node
              uses: actions/setup-node@v3
              with:
                cache: 'npm'
                cache-dependency-path: ./frontend/package-lock.json

            - name: install dependencies
              run: npm ci --prefer-offline

            - name: run linter
              run: npm run linter

            - name: npm audit
              run: npm audit --audit-level=moderate



    tests-backend:
      runs-on: ubuntu-latest
      defaults:
            run:
                working-directory: ./node-api
      steps:
            - name: checkout
              uses: actions/checkout@v5

            - name: setup node
              uses: actions/setup-node@v3
              with:
                cache: 'npm'
                cache-dependency-path: ./node-api/package-lock.json

            - name: install dependencies
              run: npm ci --prefer-offline

            - name: run linter
              run: npm run linter

            - name: npm audit
              run: npm audit --audit-level=moderate
            
            - name: exec units tests
              run: npm run test:ci

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v5
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
        
    build-frontend-and-node-api:
        needs: [tests-frontend, tests-backend]
        runs-on: ubuntu-latest
        strategy:
          matrix:
            include:
                - context_name: ./frontend
                  image_name: ghcr.io/nbendev/cicd-projet2/frontend:latest
                - context_name: ./node-api
                  image_name: ghcr.io/nbendev/cicd-projet2/node-api:latest
        permissions:
          packages: write
        steps:
            - name: checkout
              uses: actions/checkout@v5

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            -   name: Docker meta
                uses: docker/metadata-action@v5
                with:
                    images: ${{ matrix.image_name }}

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
               registry: ghcr.io
               username: ${{ github.actor }}
               password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
               context: ${{ matrix.context_name }}
               push: true
               tags: ${{ matrix.image_name }}
               cache-from: type=gha
               cache-to: type=gha,mode=max